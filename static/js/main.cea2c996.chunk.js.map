{"version":3,"sources":["Components/Filter/Filter.module.css","redux/contacts/contactsAction.js","Components/Form/Form.js","Components/ContactsList/ContactsListItem/ContactsListItem.js","Components/ContactsList/ContactsList.js","Components/Filter/Filter.js","App.js","redux/contacts/contactsReducer.js","redux/store.js","index.js","Components/Form/Form.module.css","Components/ContactsList/ContactsListItem/ContactsListItem.module.css"],"names":["module","exports","addContact","createAction","contact","payload","id","uuidv4","removeContact","changedFilter","Form","state","name","number","nameInputId","numberInputId","handleChange","event","target","value","setState","handleSubmit","preventDefault","props","onCheckUnique","onSubmit","reset","validateFrom","className","styles","form","this","label","htmlFor","type","pattern","title","required","placeholder","onChange","button","Component","connect","dispatch","actions","ContactsListItem","onRemove","item","onClick","getVisibleContacts","allContacts","filter","normalizedFilter","toLowerCase","includes","contacts","items","length","map","filterLabel","App","handleCheckUniqueContact","check","find","alert","createReducer","action","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.cea2c996.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterLabel\":\"Filter_filterLabel__1JUWF\"};","import { v4 as uuidv4 } from 'uuid';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nconst addContact = createAction('contacts/add', contact => ({\r\n  payload: {\r\n    id: uuidv4(),\r\n    ...contact,\r\n  },\r\n}));\r\n\r\nconst removeContact = createAction('contacts/remove');\r\n\r\nconst changedFilter = createAction('contacts/filterChanged');\r\n\r\nexport default {\r\n  addContact,\r\n  removeContact,\r\n  changedFilter,\r\n};\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport styles from './Form.module.css';\r\n\r\nimport actions from '../../redux/contacts/contactsAction';\r\n\r\nexport class Form extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  nameInputId = uuidv4();\r\n  numberInputId = uuidv4();\r\n\r\n  handleChange = event => {\r\n    const { name, value } = event.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    if (this.props.onCheckUnique(this.state.name)) {\r\n      this.reset();\r\n\r\n      return;\r\n    }\r\n    this.props.onSubmit(this.state);\r\n\r\n    this.reset();\r\n  };\r\n\r\n  validateFrom = () => {};\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form className={styles.form} onSubmit={this.handleSubmit}>\r\n          <label className={styles.label} htmlFor={this.nameInputId}>\r\n            Name\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n              placeholder=\"Enter name\"\r\n              value={this.state.name}\r\n              onChange={this.handleChange}\r\n              id={this.nameInputId}\r\n            />\r\n          </label>\r\n\r\n          <label className={styles.label} htmlFor={this.numberInputId}>\r\n            Number\r\n            <input\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n              title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n              required\r\n              placeholder=\"Enter phone number\"\r\n              value={this.state.number}\r\n              onChange={this.handleChange}\r\n              id={this.numberInputId}\r\n            />\r\n          </label>\r\n\r\n          <button className={styles.button} type=\"submit\">\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispathcToProps = dispatch => ({\r\n  onSubmit: contact => dispatch(actions.addContact(contact)),\r\n});\r\n\r\nexport default connect(null, mapDispathcToProps)(Form);\r\n","import styles from './ContactsListItem.module.css';\r\n\r\nconst ContactsListItem = ({ id, name, number, onRemove }) => {\r\n  return (\r\n    <li className={styles.item}>\r\n      <span>\r\n        <span className={styles.name}> {name} : </span>\r\n        <span className={styles.number}>{number}</span>\r\n      </span>\r\n\r\n      <button className={styles.button} onClick={() => onRemove(id)}>\r\n        Remove\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ContactsListItem;\r\n","import { connect } from 'react-redux';\r\n\r\nimport ContactsListItem from './ContactsListItem/ContactsListItem';\r\nimport actions from '../../redux/contacts/contactsAction';\r\n\r\nconst ContactsList = ({ contacts, onRemove }) => {\r\n  if (contacts.length === 0) return null;\r\n  return (\r\n    <>\r\n      <h2 className=\"title\">Contacts</h2>\r\n      <ul>\r\n        {contacts.map(contact => (\r\n          <ContactsListItem\r\n            key={contact.id}\r\n            {...contact}\r\n            onRemove={() => onRemove(contact.id)}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nconst getVisibleContacts = (allContacts, filter) => {\r\n  const normalizedFilter = filter.toLowerCase();\r\n  return allContacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(normalizedFilter),\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\r\n  contacts: getVisibleContacts(items, filter),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onRemove: id => dispatch(actions.removeContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsList);\r\n","import { connect } from 'react-redux';\r\nimport styles from './Filter.module.css';\r\nimport actions from '../../redux/contacts/contactsAction';\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  return (\r\n    <label className={styles.filterLabel}>\r\n      Find contacts by name\r\n      <input\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={value}\r\n        onChange={onChange}\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  value: state.contacts.filter,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChange: event => dispatch(actions.changedFilter(event.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport Form from './Components/Form';\nimport ContactsList from './Components/ContactsList';\nimport Filter from './Components/Filter';\n\nimport './styles.css';\nclass App extends Component {\n  handleCheckUniqueContact = name => {\n    const { contacts } = this.props;\n    const check = contacts.find(contact => {\n      return contact.name === name;\n    });\n    if (check) {\n      alert('Contact is already exist');\n      return check;\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"app\">\n        <h1 className=\"title\">Phonebook</h1>\n        <Form onCheckUnique={this.handleCheckUniqueContact} />\n        {this.props.contacts.length > 0 && <Filter />}\n        <ContactsList />\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => ({\n  contacts: state.contacts.items,\n});\n\nexport default connect(mapStateToProps, null)(App);\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport actions from './contactsAction';\r\n\r\nconst items = createReducer([], {\r\n  [actions.addContact]: (state, action) => [...state, action.payload],\r\n  [actions.removeContact]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [actions.changedFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport contactsReducer from './contacts/contactsReducer';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\nconst contactsPersistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport store from './redux/store';\n\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={<h1>Loading...</h1>} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2JFlq\",\"button\":\"Form_button__1Z3Ac\",\"label\":\"Form_label__21sXc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactsListItem_button__32eq7\",\"item\":\"ContactsListItem_item__2teUu\",\"name\":\"ContactsListItem_name__1tNUq\"};"],"sourceRoot":""}